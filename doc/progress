2/6/12
made becker_test in psql
drew up flow of admin pages
drew up flow of customer pages
drew up best initial guess at data
generated scaffold for basic admin , customers, and products
rake db:migrate
changed description text_field to <%= f.text_area :desc, rows: 6 %>
installed minitest gem and added to gem list
2/7/12
ran rake db:migrate VERSION=0
changed product desc: datatype to text 
		varchar not long enough
ran rake db:migrate
began seed.rb for Product database
		added 4 products
ran rake db:seed - success
added a products stylesheet
changed products/index to have alternating style with cycle
added photos to edit - show pages 
	changed variable name of show to detail
	changed name of back link to List
should i change database names show => detail - NO
2/8/12
	change product to item tho ? or instrument ?
wrote Product validations
added a test suite and debugged file
changed the image_tag listings on new and edit to be based on products available
adding a index page for store controller
changing application layout to have basic look
wrote functional test for store controller
helper formatted prices
added logos and worked layout altho it may need a re-start
created scaffold for cart and line_items
added dependencies and has_many's for cart, line_item, and product
add to cart button increate of line_items controller
change form, div in store.css to display: inline so button_to is on same line as price
added show to shopping cart
2/9/12
add quantity to cart db via migration
added error log to invalid cart requests
adjusted some css and put cart in table
put empty cart button in
added delete line item to cart#show
changed to orange - brown theme
moved cart render into line_item partial .. cart#show into partial
put cart into sidebar and removed show cart from rendering - always shows list
added AJAX to add to cart, so it never re-load that list when adding to cart, very smooth@!
empty cart , remove item needs to be AJAX and NOT reload the entire page when pressed
2/10/12
generating order scaffold and adding foreign key to line item db
added the checkout button
added order data entry form
validations for order entry forms
created an atom feed for the shipping dept to follow for all new orders
add price to the line_item and migrate prices into previous line_items
wrote a script to pre-pop the dev db with orders and line items , needs work on quantity matching
installed will_paginate for list orders
thank you for your order notice is now hidden when you add to cart ... using jquery
2/12/12
mailer is working in text, but HTML mailer doesnt work because it calls the line_item.HTML.erb 
			that partial has the buttons for quantity and cart and it cant render them in mail
adding tests for the mailer
added integration test of buying a product
adding email when shipped and added ship_date to orders db
added an error occurred email for the error in cart controller
added links in the sidebar and a logout button
added before filter for authorize method
login screen for admin product area etc
encrypted the password with bcrypt has_secure_password
linked all the views together
login button
old store link
2/13/12
added product type and feature to products db
made feature model
added options scaffold to begin building custom_builder
added has_many relationship for options, belongs_to for line items etc
imockedup'd product views included cart display/edit info display/edit
remove admins and build user .. add email field for password reset, first, last name
rails destroy model Admin - remove migration as well
	remove admins views except=>index (welcome)
	still in postgresql tho - drop table admins; done.
	still in schema file - whoops! maybe just delete that??
added text for forget password and weak looking remember me checkbox
add the type column to product db 
	types are => guitar, bass, mandolin, banjo, custom
2/15/12
user#email validation added for presence, uniqueness in model
add position to products table; use for order of lists on product list and nav bar list
deleted scaffold.css.scss a, put code in application.css.scss
updated seeds.rb with more products and type_of , feature, position
cannot use 'type' in db , changed column to type_of
updated seeds.rb with Features
updates seeds.rb with Options and seeded the db
removed default, display boolean presence => true validations cuz they were breaking 
set up feature and option CRUD
	changed option CRUD to have the names of the feature and product instead of ids
	in select tag of edit & new, and text in index & show
	wrote feature array and product array in app controller to get array
	not going to database from the options views anymore :)
orders list is now in cart order 
cart sort =     @options = Option.where(product_id: 33).order("options.feature_id ASC").order("options.price ASC")
2/16/12
add options list to product show and edit for - moved to main index /edit
made version 1 of the dynamic cart !!
added links for detail and edit views to all the detail and edit view pages
started Edit Custom Build Page FORMS CONFUSE ME !!! - needs lots of works
added guitar/bass/custom/all links to the Products listing page, rename instruments
	fixed the product 'new' button - broke due to features an options in partial
2/18/12
removed all CSS to rebuild
got becker logo and ryan martin logos re-sized and correct
put admin nav bar above becker nav bar
moved custom build to store section and out of main section
added links to navbar for instrument pages and logos to main page
re-link and re-run resources - must have tests in place because there are many broken routes
	because all the store routes , were routed to root, lack of foresight, never do that
added the CSS drop down menu to the menu bar, looks wanky but it works and is dynamic
2/23/12
did first draft of the front page in black and it looks good
changed main navbar to get main#instruments for instruments, kept it dynamic, one page one controller
added 8 photo_url_# tot he products db
added 8 photos to main#instrument page, they will display if they exist
did display page layout and broke it out into a "_display" partial
add the click to buy onto display page and put that button in a partial 'main/go_to_cart'
created artist model with db migration ofcourse , name, band, description, photo and youtube url's, note
created instument model as polymorphic relationship between artist/customer and line_item_id plus note
added customer_id, artist_id to orders db
added note text to orders db
migrated and very different schema, more advanced I hope and with little redundand info
added customer_id to carts too , because its a cart, then an order then an instrument , all for customer
made artists controller, better to use scaffold because u get proper routes and a form
content pages - guitar, bass, custom, artist how to format and deliver them and make them dynamic??
2/24/12
made artist CRUD, scaffold would have done this for me in 2 seconds
migrating social media fields into artists table website,fb,t, insta, blog
got artist photos into seeds and psql
added extra photos for more product to seeds and db
add horizontal photos to db + seeds.rb for the cart heading or other horizontal uses
make the image links on main#instruments 1.0 clickable
fixed the yellow hover box over the images - bottom was getting cut off - by increasing the li margin
make instruments each layouts - must fix delete to continue
it has an ERROR on assets/helper_url ... what is that and wy is it calling it ?
		its alex no image, its Rails and Action Pack looking for an image and not finding it
delete now works using the old syntax -> link_to("Delete", :action => 'delete', :id => product.id)
	new syntax doesnt work yet and I  cant debug because I dont understand resources :products in routes.rb
2/25/12
re-sized all photos to 100px height and width, page loads are waaaayyy faster , nice :)
main photogallery has BUG , when u click an image it sets to main , but if u then choose same image it does not re-set to main ie put the old main photo back in main spot BUG
			you can NEVER put the original main photo back in the main spot , the main photo always goes to the spot you clicked in last and so it is always the same click as immediate previous click
made repair link page
added contact partial with customized google map locator in repair sidebar
added "iwloc=&amp;" to google map code to remove the address pop up bubble that is on map onload
added youtube videos and prdouct list and artist list to artists page 
made the about page off the repair page , putting link on the home page bottom right 
made greyed model page when cart new is clicked - use the instruments page but with greyed pics
				add bar to top for choices between instrument styles
2/26/12
new scaffold for BodyType , just to allow for CRUD and to have that stored not in product db
make seed for bodytype and run in console
adjust controller and views for store#new to use body types and not query products for body_url
add select tag for type_of to body_type CRUD
FIXed DESTROY!!!  must use the word delete and not destroy in the controller method
made dynamic artist page layout and artists layout basic V1
made theme scaffold , hopefully get thru to the cart after this one !
done seed.rb for theme		
make polymorphic database relationship between body and theme  - db schema body_type_id , theme_id
	correctly built and named the join table using 
	rails generate migration create_body_type_theme_join_table
	 		then adding the appropriate code into the migration .. see migration , but the naming code is important
added habtm to the models - learn the @body_type.themes << theme system
added habtm listing to the views and controllers, now fully functional!
add theme- body_url relationships to the database, where does it go in the seed ?
after you choose a body type in store#new , it needs to show a gallery of available themes
add image_url, x_image_url, and thumb_url to Theme table - and migrate add to views
2/27/12
added sortable jQuery to the features list
included the 'acts_as_list' gem to set the position variable whenever a feature#new is created
		add default number to feature#new 
added a draggable icon to the list
changed artists#index to be sortable too
made products lists for each instrument sortable, this is how u control the navbar lists
added short term admin menu bar for navigation
2/28/12
removed line items from admin bar
added a themes bar and removed search bar until I know how to make the search bar search
	search bar code is in code.txt #
added position and deescription to theme db - migrated and added to theme pages
added menu bar to theme admin pages
built basic themes and theme templates with lists, need to get pics and layout
added sortable to themes #index page for the whole site - going with sort list and then table
added sortable to body type #index page for the whole site - going with sort list and then table
	removed position from table and description from order list
added descriptions to themes
theme detail pages
artist#show now renders the main#artist#view partial with edit|list link
added social media listings to the artist#view partial
theme#show is now the main#theme page with theme#edt|index links just like artists
2/29/12 - Leap Year
added divs for formatting to features, body_types , and themes admin , put css in features.css.sass
changed db for the new cart implementation
	added display boolean to themes, body types - added view detail to show, index, _form for each
added display and theme_id and body_type_id to products db
	- added f.collection_select tags to view for all three
	- added has many and belongs to to the models
added keys crud and m   odel associations to options - show,index, _form via collection select
	- added has_many and belongs_to's
getting cart up and functional with new data structures and features/body_type info
added NAME to theme#new backend !
added basic theme called starter for now
cart works ! and fast
getting options db up to speed
3/1/12
did some slight refactoring of the main#instrument page
added js cart auto updating feature
added body type box and theme box to the build cart 
add to cart button on store#build works great cuz its on Product
added body_type_id and theme_id keys to the line_items w/ model associations
	eventually this product vs body type/theme situation is going to have to be resolved
	a product is a body type AND a theme ... 
	when a body type or theme is entered , the appropriate connections between them are established 
		then the appropriate products should be create - House imperial etc , and 
		those products hold options ?
		those products got to the cart ?
	it seems like the cart should be body type / theme / options - no product even necessary
	it would be as simple as making the body type and theme options and asking for them first 
		then query db for a product with them and if you cannot find - product.create
		then run off the product id for the rest of the experience
		the product name would be the theme plus the body type
first attempt at javascript cart is a fail ... backing out 
adding in place edit to get something done - added to option#show which I no longer want - will remove
removed feature#show
removed body_type#show
added edit ALL to option#index with edit in place on the whole index table
back to putting in-line javascript into cart and making it work





UP NEXT
edit ALL is SIIICKKK , make it fast and work please 
	needs in-line add/new & duplicate
options#index query is probably bad, rebuild with smart qeury
	- could paginate options#index by instrument- maybe use the accordian - and edit on spot
	- remove body type and theme from option#show select tags on edit all etc
accordian for cart - subtotal sidebar
accordian for options admin page
new menu bar with admin addition

add front page control pages in admin - how do u turn on and off the boxes , videos ??
master color theme changes in admin area ?
add photo add section with crop system

product edit/new should have group_collection_select code connecting type_of/body_type/theme
product db shouldn't have a choosable type_of anymore, it should either get that from BodyType or it should be automatically set by that choice unless custom is chosen or default
products#show can't be replaced with main#instrument until image gallery is refactored .. obvi

sideways scroll image booths  --- body type - themes
infinity list for artist pages
facebook - twitter -instagram connect
add spree or swip credit card system -- open an account - confirm working info 
admin template for secondary pages
re-factor thumbnail code / photo folder system to work better - put code in model ?

ORDERS CRUD WORKS?!?!
time to re-build cart with theme and body type
should remove id from restful and use names, 
how do i need to change product db to include bodytype and theme??
need to write main#themes so we can link to that from store when clicking links

redo css now that main#instrument is fucked up
artists page - add signature guitars to instruments list and display artist with their signature guitars
center column sort by most recent and make a db to hold info 
				video links , news items, and uploads to twitter - fb etc 
				add comments functionality to artists listings - atleast notes for each item
				make the items alternate between left and right in css
add command to seed.rb that returns the index to 0 for each table instead of just deleting - necessary??

re-write the db .. make photos table and videos table and make them polymorphically connected to each table
	use habtm to connect, for now Im going to just ad image_url to Theme
build ruby program to take photos, re-size, adjust, set to naming conventions, re-save to image folder
need photo_url naming system so it an be "~.jpg" for large photo and "~thumb.jpg" for thumbnail ?
		or is it better to just load the larger and resize onclick??
make partial of 'List | Detail View | Edit Detail View | Custom Build'
	use Ajax so it doesnt have to reload every switch
new option on edit custom build needs to prepopulate the select fields with product_name / type
Update option buttons in main custom build should redirect back to main custom view not option#show
cart needs to recalculate add/subtract prices when u pick features in custom build
make options' names editable on the features edit page
make orders editable on product edit
item lists need work on admin side - listing orders - very clunky
may want to break ipaddress out into its own table with customer_id to track different computers per customer
Is there anyway to iterate over db fields named "photo_url_8" and "photo_url_9" ???
add mailer for password reset
add remember me check box to login
add facebook and twitter connect features
how to make the site search work ??
change user delete so only one person can delete other users and make it so they cant delete themselves
HTML email needs to function
mail to artists with their info so they can update, maybe link to page?
Errors send 
fixed z-index of nav bar over main#themes - but that broke img links ?? how to fix?

write methods for ^/v , where they add or remove quantity form the line item quantity
   if quantity is == 1 , V if pressed (q becomes 0) a pop up asks 3 options, do not lower quantity -  cancel , leave in cart at 0 , remove from cart
   if left in cart at 0 , V disappears
   as quantities change, the price of the line item and the total of the cart are changing
enhance remove button ajax so it only removes the line item that it is pressed on and not the whole cart
stop cart from re-ordering ... keep items in order you add to cart in 
cart should follow the scroll on the screen, you scroll down, so does cart
add session counter to store controller index action
	display that variable only when value > 5
database dump feature into seeds.rb format to back up product data - or db backup ??
add auto twitter and facebook post system that puts out photos or videos of the day , maybe good comments


ELEPHANTS
re-factor photo system
	file names - folder locations
	image gallery selection systion - web 2.0 option?
	database for photos?
	database for videos? same as photos ? media db?
re-do admin/site navbar
Shopping cart
	javascript auto-tally
	javascript option relative prices  working

